AWSTemplateFormatVersion: '2010-09-09'
Description: |-
  Set up an EC2 instance with a new VPC in a public subnet and give it a public IP with SSH access from anywhere with a specified key
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
  AMI:
    Description: AMI to use
    Type: String
    Default: ami-0c7217cdde317cfec

Resources:

  # create VPC
  TestVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
       - Key: Name
         Value: TestVPC

  # Create subnet and put in VPC
  TestSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: true
      VpcId:
        Ref: TestVPC
      CidrBlock: 10.10.1.0/24
      #AvailabilityZone: "us-east-1a"
      Tags:
       - Key: Name
         Value: TestSubnet

  # Create IGW and attach to VPC
  TestIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
       - Key: Name
         Value: TestIGW
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
         Ref: TestVPC
      InternetGatewayId:
         Ref: TestIGW          

  # create RT
  TestRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: TestVPC
      Tags:
       - Key: Name
         Value: TestRT

  # associate RT to subnet
  TestRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: ['TestSubnet', 'TestRT']
    Properties:
      SubnetId:
        Ref: TestSubnet
      RouteTableId:
        Ref: TestRT

  # Attach route to RT
  myRoute:
    Type: AWS::EC2::Route
    DependsOn: TestIGW
    Properties:
       RouteTableId:
         Ref: TestRT
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: TestIGW

  # security group
  TestSG:
    Type: AWS::EC2::SecurityGroup
    DependsOn: TestVPC
    Properties:
      GroupDescription: SSH from anywhere
      VpcId: !Ref TestVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: TestSG

  # instance
  TestInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      #SecurityGroups: [!Ref 'TestSG']
      SubnetId: !Ref 'TestSubnet'
      SecurityGroupIds: [!Ref 'TestSG']
      KeyName: !Ref 'KeyName'
      ImageId: !Ref 'AMI'
      Tags:
        - Key: Name
          Value: TestInstance

Outputs:
  InstanceIP:
    Description: The IP of the instance
    Value: !GetAtt TestInstance.PublicIp               
